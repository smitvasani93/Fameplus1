@model  Transactiondetails.ViewModels.JobReciptVM

@using (Ajax.BeginForm("SaveJobworkReceipt", "JobWorkReceipts", new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "result",OnSuccess= "AjaxFormSuccess" }))
{
    <div class="row g-3">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-sm-2">
                    <label for="inputEmail3" class="col-form-label">Receipt Date</label>
                </div>
                <div class="col-sm-5">
                    @Html.TextBoxFor(x => x.ReferenceDate, new { @class = "form-control" })
                </div>
                <div class="col-sm-2 mr-minus">
                    <label for="inputEmail3" class="col-form-label">Receipt No</label>
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.SerialNumber, new { @class = "form-control", @readonly = true })
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="row">
                <label for="inputEmail3" class="col-sm-2 col-form-label">Customer Name</label>
                <div class="col-sm-5">
                    @Html.DropDownList("AccountCode", new SelectList(Model.Accounts, "AccountCode", "AccountName", Model.AccountCode), "Please select", new { @id = "ddlCustomer", @class = "form-select" })
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div id="newone" class="row pt-4">
                <table id="receipt" class="table table-bordered">
                    <thead>
                        <tr>
                            <th style="width:320px;">Process</th>
                            <th>Packet No</th>
                            <th>Pieces</th>
                            <th>Carats</th>
                            <th>Lines</th>
                            <th>Remarks</th>
                            <th></th>
                        </tr>
                    </thead>

                    @{
                        var trcount = 1;
                    }
                    @for (var i = 0; i < Model.JobReceiptDetails.Count(); i++)
                    {
                        <tr>
                            <td>
                                @Html.DropDownListFor(model=> Model.JobReceiptDetails[i].ProcessCode, new SelectList(Model.Processes, "ProcessCode", "ProcessName", Model.JobReceiptDetails[i].ProcessCode),"Please select", new { @id = "ddlStatus", @class = "form-select" })

                                @*@Html.DropDownList("ProcessCode", new SelectList(Model.Processes, "ProcessCode", "ProcessName", @item.ProcessCode), "Please select", new { @id = "ddlStatus", @class = "form-select" })*@
                            </td>
                            <td>
                                @Html.TextBoxFor(model=> Model.JobReceiptDetails[i].PacketNumber,new {@required=true,@class= "form-control numberonly" })
                                @*<input type="text" class="form-control numberonly" id="1" name="PacketNumber" value="@item.PacketNumber" required>*@
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobReceiptDetails[i].ItemPieces, new { @required = true, @class = "form-control numberonly" })
                                @*<input type="text" class="form-control numberonly" id="2" name="ItemPieces" value="@item.ItemPieces" required>*@
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobReceiptDetails[i].ItemCarats, new { @required = true, @class = "form-control numberonly" })
                                @*<input type="text" class="form-control numberonly" id="3" name="ItemCarats" value="@item.ItemCarats" required>*@
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobReceiptDetails[i].ItemLines, new { @required = true, @class = "form-control numberonly" })
                                @*<input type="text" class="form-control numberonly" id="4" name="ItemLines" value="@item.ItemLines" required>*@
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobReceiptDetails[i].Remarks, new { @required = true, @class = "form-control numberonly" })
                                
                                @*<input type="text" class="form-control" id="5" name="Remarks" value="@item.Remarks" required>*@
                            </td>
                            <td class="plsRow"><a class="addRow" href="#"><i class="fa fa-plus"></i></a><a class="deleteRow" href="#"><i class="fa fa-trash"></i></a></td>
                            <td style="display:none">
                                @Html.HiddenFor(model => Model.JobReceiptDetails[i].ItemSerialNumber)
                                @*<input type="hidden" class="form-control" id="0" value="@item.ItemSerialNumber">*@
                            </td>
                        </tr>

                    }

                    @*@foreach (var item in Model.JobReceiptDetails)
                    {
                        var idstr = "tr" + trcount;
                        <tr id="@idstr">

                            <td>
                                @Html.DropDownList("ProcessCode", new SelectList(Model.Processes, "ProcessCode", "ProcessName", @item.ProcessCode), "Please select", new { @id = "ddlStatus", @class = "form-select" })
                            </td>
                            <td><input type="text" class="form-control numberonly" id="1" name="PacketNumber" value="@item.PacketNumber" required></td>
                            <td><input type="text" class="form-control numberonly" id="2" name="ItemPieces" value="@item.ItemPieces" required></td>
                            <td><input type="text" class="form-control numberonly" id="3" name="ItemCarats" value="@item.ItemCarats" required></td>
                            <td><input type="text" class="form-control numberonly" id="4" name="ItemLines" value="@item.ItemLines" required></td>
                            <td><input type="text" class="form-control" id="5" name="Remarks" value="@item.Remarks" required></td>
                            <td class="plsRow"><a class="addRow" href="#"><i class="fa fa-plus"></i></a><a class="deleteRow" href="#"><i class="fa fa-trash"></i></a></td>
                            <td style="display:none"><input type="hidden" class="form-control" id="0" value="@item.ItemSerialNumber"></td>
                        </tr>
                        trcount++;
                    }*@
                </table>
            </div>
        </div>
        <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix mt-4">
            <div class="ui-dialog-buttonset pe-sm-1">
                <button type="submit" class="btn btn-default">Submit</button>
                <button type="button" class="btn btn-default">Close</button>
            </div>
        </div>
    </div>
    <div id="result"></div>
}

<script type="text/javascript">
    $(function () {
        $("#ReferenceDate").datepicker();
    });

    $(function () {

        $(document).on('click', '#receipt .addRow', function () {
            var noclone = false;
            $("#receipt tbody tr").each(function (i, row) {
                let $actualrow = $(row);
                $actualrow.find("td").each(function (column, td) {

                    let select = $(td).find("select");
                    let text = $(td).find("input[type=text]");

                    if (select.length != 0) {
                        if ($(select).val() == 0 || $(select).val() == "") {
                            $(select).addClass("error");
                            noclone = true;
                        } else {
                            $(select).removeClass("error");
                        }
                    }
                    if (text.length != 0) {
                        if ($(text).val() == "") {
                            $(text).addClass("error");
                            noclone = true;
                        } else {
                            $(text).removeClass("error");
                        }
                    }
                });
            });

            if (!noclone) {
                var tr = $("#newone").find("Table").find("tr:last").clone();
                tr.find("input:text").val("");
                $("#receipt").append(tr);
            }
        });

        $("#receipt").on('click', '.deleteRow', function () {
            if (1 != $('#receipt >tbody >tr').length)
                $(this).parent().parent().remove();
        });
    });

    function AjaxFormSuccess(e) {
        if (e == "Success") {
            $('#dialog').dialog('close');
        }
    }
</script>
<style type="text/css">
    .error {
        border-color: red !important;
    }
</style>