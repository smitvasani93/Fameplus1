@model  Transactiondetails.ViewModels.JobDespatchViewModel
@using Newtonsoft.Json;

@{
    var jsonMode = JsonConvert.SerializeObject(Model.Mode);
    var jsonModel = JsonConvert.SerializeObject(Model);
    var htmlAttributes = new Dictionary<string, object>();
    htmlAttributes.Add("class", "form-control");
    htmlAttributes.Add("readonly", true);
    //if (Model.Mode == Transactiondetails.ViewModels.Mode.Update)
    //{
    //    htmlAttributes.Add("readonly", true);
    //}
}

@using (Ajax.BeginForm("SaveJobworkDespatch", "JobWorkDespatchs", new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "result", OnSuccess = "AjaxFormSuccess" }, new { id = "JobworkReceiptPop" }))
{
    @Html.HiddenFor(model => model.Mode)
    <div class="row g-3">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-sm-2">
                    <label for="inputEmail3" class="col-form-label">Receipt Date</label>
                </div>
                <div class="col-sm-5">
                    @Html.TextBoxFor(x => x.ReferenceDate, "{0:dd/MM/yyyy}", new { @id = "ReferenceDate11", @class = "form-control", @readonly = true })
                </div>
                <div class="col-sm-2 mr-minus">
                    <label for="inputEmail3" class="col-form-label">Receipt No</label>
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.SerialNumber, htmlAttributes)
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="row">
                <label for="inputEmail3" class="col-sm-2 col-form-label">Customer Name</label>
                <div class="col-sm-5">
                    @Html.DropDownList("AccountCode", new SelectList(Model.Accounts, "AccountCode", "AccountName", Model.AccountCode), "Please select", new { @id = "ddlCustomer", @class = "form-select" })
                    @Html.HiddenFor(model => model.AccountCode, new { @id = "AccountCodedummy" })
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div id="newone" class="row pt-1 newone-css">
                <table id="despatch" class="table table-bordered">
                    <thead>
                        <tr>
                            <th style="width:250px;">Ref. Date</th>
                            <th style="width:400px;">Process</th>
                            <th style="width:200px;">Packet No</th>
                            <th style="width:200px;">Pieces</th>
                            <th style="width:200px;">Carats</th>
                            <th style="width:200px;">Lines</th>
                            <th style="width:200px;">Pieces Despatch</th>
                            <th style="width:200px;">Carats Despatch</th>
                            <th style="width:200px;">Lines Despatch</th>
                            <th style="width:200px;">Weight Loss</th>
                            <th style="width:200px;">Status</th>
                            <th style="width:200px;">Billing Unit</th>
                            <th style="width:200px;">Billing Qty</th>
                            <th style="width:200px;">No Charge Qty</th>
                            <th style="width:200px;">Rate</th>
                            <th style="width:200px;">Remarks</th>
                        </tr>
                    </thead>
                    @for (var i = 0; i < Model.JobDespatchDetails.Count(); i++)
                    {
                        <tr class="receipt-@Model.JobDespatchDetails[i].ProcessCode">
                            <td>
                                @Model.JobDespatchDetails[i].ReferenceDate
                            </td>
                            <td>
                                @Model.JobDespatchDetails[i].ProcessName
                                @Html.HiddenFor(model => Model.JobDespatchDetails[i].ProcessCode)
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].PacketNumber, new { @required = true, @class = "form-control numberonly" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].ItemPieces, new { @required = true, @class = "form-control allow_decimal" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].ItemCarats, new { @required = true, @class = "form-control allow_decimal" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].ItemLines, new { @required = true, @class = "form-control allow_decimal" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].BalItemPieces, new { @required = true, @class = "form-control allow_decimal" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].BalItemCarats, new { @required = true, @class = "form-control allow_decimal" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].BalItemLines, new { @required = true, @class = "form-control allow_decimal" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].WeightLoss, new { @class = "form-control" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].Status, new { @class = "form-control" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].BillingUnit, new { @class = "form-control" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].BillingQuantity, new { @class = "form-control" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].NoChargeQuantity, new { @class = "form-control" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].Rate, new { @class = "form-control" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => Model.JobDespatchDetails[i].Remarks, new { @class = "form-control" })
                                @Html.HiddenFor(model => Model.JobDespatchDetails[i].ItemSerialNumber)
                            </td>
                        </tr>
                    }
                </table>

            </div>
            <div class="jqueryTbl-container">
                <table id="jqueryTbl"></table>
                <div class="ui-dialog-buttonset offset-lg-11 pt-lg-3 pb-lg-1 ps-5">
                    <button type="button" class="btn btn-default select-pending-receipt">Select</button>
                </div>
            </div>

        </div>
        <div class="col-lg-12 button-container newone-css">
            <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
                <div class="ui-dialog-buttonset ps-sm-5">
                    <button type="submit" class="btn btn-secondary">Submit</button>
                    <button type="button" class="btn btn-default btn-close-dialog ">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div id="result">

    </div>
}

<script type="text/javascript">

    var mode =@(Html.Raw(jsonMode));

    $(function () {

        var data =@(Html.Raw(jsonModel));
        var pageWidth = $("#jqueryTbl").parent().width() - 100;
        $("#jqueryTbl").jqGrid({
            data: [],
            datatype: 'local',
            colModel: [
                /*{ label: 'Tag', name: "Tag", width: 50, align: "center", sortable: false, formatter: "checkbox", formatoptions: { disabled: false }, edittype: "checkbox", editoptions: { value: "True:False" }, formatoptions: { disabled: false }, multiselect: true },*/
                { label: "Ref Date", name: "ReferenceDate", width: (pageWidth * (15 / 100)), align: "center", formatter: "date", formatoptions: { srcformat: "m/d/Y h:i:s A", newformat: "Y-m-d" } },
                { label: "Customer", width: (pageWidth * (20 / 100)), align: "center", name: "CustomrName" },
                { label: "Process ", width: (pageWidth * (24 / 100)), align: "center",  name: "ProcessName"},
                { label: "Packet No", width: (pageWidth * (10 / 100)), align: "center", name: "PacketNumber"},
                { label: "Pieces", width: (pageWidth * (6 / 100)), align: "center", name: "ItemPieces"},
                { label: "Pending Pieces", width: (pageWidth * (10 / 100)), align: "center", name: "BalItemPieces"},
                { label: "Carats", width: (pageWidth * (5 / 100)), align: "center", name: "ItemCarats"},
                { label: "Pending Carats", width: (pageWidth * (10 / 100)), align: "center", name: "BalItemCarats" },
                { label: "Lines", width: (pageWidth * (5 / 100)), align: "center", name: "ItemLines" },
                { name: "ItemSerialNumber", hidden: 'true'},
                { name: "ProcessCode", hidden: 'true' }
            ],
            cmTemplate: { sortable: false },
            loadonce: true,
            height: '100%',
            width: '100%',
            multiselect: true,
            multiselectWidth: 30,
            shrinkToFit: true,
            onSelectRow: function (rowid, status, e) {

            },
            gridComplete: function () {

            }
        });


        $(".select-pending-receipt").on("click", function (e) {

            $("#ddlCustomer").val();
            $("#AccountCodedummy").val($("#ddlCustomer").val());
            $("#ddlCustomer").prop("disabled", "disabled");
            getSelectedRows();
        });

        function getSelectedRows() {

            let $grid = $("#jqueryTbl");
            let rowKey = $grid.getGridParam("selrow");
            let gridData = [];

            if (!rowKey) {
                alert("No rows are selected");
                return;
            }

            let selectedRows = $("#jqueryTbl").jqGrid("getGridParam", "selarrrow");

            // loop through the IDs to retrieve the data for each selected row
            for (var i = 0; i < selectedRows.length; i++) {
                var rowData = $("#jqueryTbl").jqGrid("getRowData", selectedRows[i]);
                gridData.push(rowData);
            }

            let $tr = $("#newone").find("Table").find("tr:last");
            for (let i = 0; i < gridData.length; i++) {

                if (i === 0) {

                    $tr.find("td:nth-child(1)").html(gridData[i].ReferenceDate);
                    $tr.find("td:nth-child(2)").html(gridData[i].ProcessName);
                    $tr.find("input[name*='PacketNumber']").val(gridData[i].PacketNumber);
                    $tr.find("input[name*='ItemPieces']").val(gridData[i].ItemPieces);
                    $tr.find("input[name*='ItemLines']").val(gridData[i].ItemLines);
                    $tr.find("input[name*='ItemCarats']").val(gridData[i].ItemCarats);
                    $tr.find("input[name*='BalItemPieces']").val(gridData[i].BalItemPieces);
                    $tr.find("input[name*='BalItemCarats']").val(gridData[i].BalItemCarats);
                    $tr.find("input[name*='BalItemLines']").val(gridData[i].BalItemLines);
                    $tr.find("input[name*='ProcessCode']").val(gridData[i].ProcessCode);
                    continue;
                }

               let $trClone = $tr.clone();

                $trClone.find("td:nth-child(1)").html(gridData[i].ReferenceDate);
                $trClone.find("td:nth-child(2)").html(gridData[i].ProcessName);

                $trClone.find("input").each(function (idx, $inputElm) {
                    $inputElm.id.replace(/\d+/, i);
                    $inputElm.name.replace(/\d+/, i);
                });

                $trClone.find("input[name*='ItemSerialNumber']").val(gridData[i].ItemSerialNumber);
                $trClone.find("input[name*='PacketNumber']").val(gridData[i].PacketNumber);
                $trClone.find("input[name*='ItemPieces']").val(gridData[i].ItemPieces);
                $trClone.find("input[name*='ItemLines']").val(gridData[i].ItemLines);
                $trClone.find("input[name*='ItemCarats']").val(gridData[i].ItemCarats);
                $trClone.find("input[name*='BalItemPieces']").val(gridData[i].BalItemPieces);
                $trClone.find("input[name*='BalItemCarats']").attr("name", "JobDespatchDetails[" + i + "].BalItemCarats");
                $trClone.find("input[name*='BalItemLines']").attr("name", "JobDespatchDetails[" + i + "].BalItemLines");
                $trClone.find("input[name*='ProcessCode']").attr("name", "JobDespatchDetails[" + i + "].ProcessCode");
                $trClone.find("input[name*='WeightLoss']").attr("name", "JobDespatchDetails[" + i + "].WeightLoss");
                $trClone.find("input[name*='Status']").attr("name", "JobDespatchDetails[" + i + "].Status");
                $trClone.find("input[name*='BillingUnit']").attr("name", "JobDespatchDetails[" + i + "].BillingUnit");
                $trClone.find("input[name*='NoChargeQuantity']").attr("name", "JobDespatchDetails[" + i + "].NoChargeQuantity");
                $trClone.find("input[name*='Rate']").attr("name", "JobDespatchDetails[" + i + "].Rate");
                $trClone.find("input[name*='Remarks']").attr("name", "JobDespatchDetails[" + i + "].Remarks");

                $("#despatch").append($trClone);
            }

            $(".jqueryTbl-container").remove();
            $("#newone").removeClass("newone-css");
            $(".button-container").removeClass("newone-css");

            resetElementIndex();
        }
    });

    $("#ddlCustomer").on("change", function (e) {

        let accountcode = this.value;
        $.ajax({
            url: "@Url.Action("GetPendingJobworkReceipt", "JobWorkDespatchs")",
            type: "POST",
            data: { accountCode: accountcode },
            dataType: 'json',
            success: function (data) {

                var $gParams = $('#jqueryTbl').jqGrid("getGridParam");
                $gParams.data = data;
                $('#jqueryTbl').trigger("reloadGrid", [{ page: 1 }]);
            }
        });
    });


    function resetElementIndex() {
        let index = 0;

        $("#despatch tbody tr").each(function (i, row) {
            let $actualrow = $(row);
            $actualrow.find("td").each(function (column, td) {

                let $selectName = $(this).find("input,select").attr("name");
                let $name = $(this).find("input,text").attr("name");
                let $hidenname = $(this).find("input,hidden").attr("name");
                let $ctrl = undefined;

                if ($hidenname !== undefined && $hidenname.indexOf(".ItemSerialNumber") != -1) {
                    $(this).find("input,hidden").attr("id", "JobDespatchDetails" + index + "__ItemSerialNumber");
                    $(this).find("input,hidden").attr("name", "JobDespatchDetails[" + index + "].ItemSerialNumber");
                    $ctrl = $(this).find("input,hidden").attr("name","JobDespatchDetails[" + index + "].ItemSerialNumber");
                    $($ctrl).val(index);
                }

                if ($selectName !== undefined && $selectName.indexOf(".ProcessCode") != -1) {
                    $(this).find("input,select").attr("id", "JobDespatchDetails_" + index + "__ProcessCode");
                    $(this).find("input,select").attr("name", "JobDespatchDetails[" + index + "].ProcessCode");
                    $ctrl = $(this).find("input,select").attr("name", "JobDespatchDetails[" + index + "].ProcessCode");
                }

                if ($name !== undefined && $name.indexOf(".PacketNumber") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__PacketNumber");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].PacketNumber");
                    $ctrl = $(this).find("input,text").attr("name","JobDespatchDetails[" + index + "].PacketNumber");
                }

                if ($name !== undefined && $name.indexOf(".ItemPieces") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__ItemPieces");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].ItemPieces");
                    $ctrl = $(this).find("input,text").attr("name","JobDespatchDetails[" + index + "].ItemPieces");
                }

                if ($name !== undefined && $name.indexOf(".ItemCarats") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__ItemCarats");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].ItemCarats");
                    $ctrl = $(this).find("input,text").attr("name","JobDespatchDetails[" + index + "].ItemCarats");
                }

                if ($name !== undefined && $name.indexOf(".ItemLines") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__ItemLines");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].ItemLines");
                    $ctrl = $(this).find("input,text").attr("name","JobDespatchDetails[" + index + "].ItemLines");
                }

                if ($name !== undefined && $name.indexOf(".BalItemPieces") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__BalItemPieces");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].BalItemPieces");
                    $ctrl = $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].BalItemPieces");
                }

                if ($name !== undefined && $name.indexOf(".BalItemCarats") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__BalItemCarats");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].BalItemCarats");
                    $ctrl = $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].BalItemCarats");
                }

                if ($name !== undefined && $name.indexOf(".WeightLoss") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__WeightLoss");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].WeightLoss");
                    $ctrl = $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].WeightLoss");
                }

                if ($name !== undefined && $name.indexOf(".Status") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__Status");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].Status");
                    $ctrl = $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].Status");
                }

                if ($name !== undefined && $name.indexOf(".BillingUnit") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__BillingUnit");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].BillingUnit");
                    $ctrl = $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].BillingUnit");
                }

                if ($name !== undefined && $name.indexOf(".Rate") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__Rate");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].Rate");
                    $ctrl = $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].Rate");
                }

                if ($name !== undefined && $name.indexOf(".NoChargeQuantity") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__NoChargeQuantity");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].NoChargeQuantity");
                    $ctrl = $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].NoChargeQuantity");
                }

                if ($name !== undefined && $name.indexOf(".Remarks") != -1) {
                    $(this).find("input,text").attr("id", "JobDespatchDetails_" + index + "__Remarks");
                    $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].Remarks");
                    $ctrl = $(this).find("input,text").attr("name", "JobDespatchDetails[" + index + "].Remarks");
                }

                if ($ctrl !== undefined &&
                    !$($ctrl).is(":hidden") &&
                    !$($ctrl).is("[name*=Remarks]")) {

                    $($ctrl).rules("add", { required: true, messages: { required: "" } });
                }

            });
            index++;
        });
    }

    function AjaxFormSuccess(e) {

        $('#dialog').dialog('close');
    }

    jQuery(document).ready(function () {

        jQuery("#JobworkReceiptPop").validate({
           rules: {
                ReferenceDate: 'required',
                AccountCode: 'required',
                SerialNumber: 'required',
            },
            messages: {
                ReferenceDate: 'Select Reference Date',
                AccountCode: 'Select Customer',
                SerialNumber: 'Select Serial Number',
            },
            errorPlacement: $.noop
        });


        $("#despatch tbody tr").each(function (i, row) {

            let $actualrow = $(row);
            $actualrow.find("td").each(function (column, td) {

                let select = $(td).find("select");
                let text = $(td).find("input[type=text]").not('[name*=Remark]');

                if (select.length != 0) {
                    $(select).rules("add", { required: true, messages: { required: "" } });
                }
                if (text.length != 0) {
                    $(text).rules("add", { required: true, messages: { required: "" } });
                }
            });
        });
    });

    $(document).on("click", ".btn-close-dialog", function (e) {
        $('#dialog').dialog('close');
    })


    Array.prototype.removeByValue = function (val) {
        for (var i = 0; i < this.length; i++) {
            if (this[i] === val) {
                this.splice(i, 1);
                i--;
            }
        }
        return this;
    }

</script>
<style>
    #JobworkReceiptPop .form-control:read-only {
        background-color: #e9ecef !important;
    }

    #JobworkReceiptPop .ui-jqgrid .ui-jqgrid-htable th {
        height: 40px !important;
        /* padding: 0 2px 0 2px; */
    }

    #JobworkReceiptPop .ui-jqgrid tr.jqgrow td {
        padding: 4px !important;
    }

    #JobworkReceiptPop .ui-jqgrid .ui-jqgrid-view {
        font-size: 13px !important;
    }

    #JobworkReceiptPop .ui-widget input {
        margin-top: 5px !important;
    }

    #JobworkReceiptPop .ui-widget-content {
        border: 1px solid #efefef !important;
    }

    .newone-css {
        display: none;
    }

    #despatch th {
        font-size: 13px;
    }

    #despatch tr {
        font-size: 12px;
    }

        #despatch tr td:not(:first-child):not(:nth-child(2)) {
            /*padding-left:10px !important;
        padding-right:10px !important;*/
        }

        #despatch tr td:nth-child(3n) {
            padding-left: 10px !important;
            padding-right: 10px !important;
        }
</style>