@model Transactiondetails.ViewModels.CompanyViewModel

@{
    Layout = null;
}
<!DOCTYPE html>
<html>
    <haed>
        <link rel="stylesheet" href="~/Css/responsive.bootstrap.min.css">
        <style>

            * {
                box-sizing: border-box;
                margin: 0;
                padding: 0;
                font-family: Raleway, sans-serif;
            }
            body {
                background: linear-gradient(90deg, #C7C5F4, #776BCC);
            }

            input[type=text], select {
                width: 100%;
                padding: 12px 20px;
                margin: 8px 0;
                display: inline-block;
                border: 1px solid #ccc;
                border-radius: 4px;
                box-sizing: border-box;
            }

            input[type=submit] {
                width: 100%;
                background-color: #4CAF50;
                color: white;
                padding: 14px 20px;
                margin: 8px 0;
                border: none;
                border-radius: 4px;
                cursor: pointer;
            }

            input[type=submit]:hover {
                background-color: #45a049;
            }

            .container {
                display: flex;
                align-items: center;
                justify-content: center;
                min-height: 100vh;
            }

            .screen {
                position: relative;
                width: 400px;
                box-shadow: 0px 0px 24px #5C5696;
            }

            .screen__content {
                z-index: 1;
                position: relative;
            }

            div {
                border-radius: 5px;
                background-color: #f2f2f2;
                padding: 20px;
            }
            
        </style>
    </haed>

    <body>

        <div class="container">
            <div class="screen">
                <div class="screen__content">
                    @using (Html.BeginForm("Index", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {

                        <label for="fname">Company Name</label>

                        @Html.DropDownListFor(model => model.Company, Model.Companys.Select(option => new SelectListItem
                        {
                           Text = (option == null ? "None" : option.CompanyName),
                           Value = option.CompanyCode.ToString(),
                           //Selected = (Model != null) && (option.CompanyCode == Model.CompanyCode)
                        }), "Select Company", new { @class = "form-control", @onchange = "FillFYBranch()" })

                        <label for="FYear">Financial Year</label>

                        @Html.DropDownListFor(m => m.FYear, new SelectList(Enumerable.Empty<SelectListItem>(), "FinancialYearCode", "YearDescription"), "Select Fin. Year", new { @class = "form-control" })

                        <label for="Branch">Branch</label>

                        @Html.DropDownListFor(m => m.Branch,
                            new SelectList(Enumerable.Empty<SelectListItem>(), "BranchCode", "BranchShortName"),
                            "Select Branch",
                            new { @class = "form-control" })

                        @Html.HiddenFor(x => x.CompanyName)
                        @Html.HiddenFor(x => x.FYearName)
                        @Html.HiddenFor(x => x.BranchName)

                        <button type="submit" id="submit" class="btn btn-sm btn-primary"> Submit </button>

                    }
                </div>
            </div>
        </div>
</body>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script type="text/javascript">


    function FillFYBranch() {
        var companyCode = $('#Company').val();

        $.ajax({
            url: '/Account/GetFYear',
            type: "GET",
            dataType: "JSON",
            data: { CompanyCode: companyCode },
            success: function (fyears) {
                //$("#FYear").html(""); // clear before appending new list
                $.each(fyears, function (i, fyear) {
                    $("#FYear").append(
                        $('<option></option>').val(fyear.FinancialYearCode).html(fyear.YearDescription));
                });
            }
        });

        $.ajax({
            url: '/Account/GetBranch',
            type: "GET",
            dataType: "JSON",
            data: { CompanyCode: companyCode },
            success: function (branches) {
                //$("#Branch").html(""); // clear before appending new list
                $.each(branches, function (i, branch) {
                    $("#Branch").append(
                        $('<option></option>').val(branch.BranchCode).html(branch.BranchShortName));
                });
            }
        });
    }

    $("#submit").click(function () {


        if ($("#Company").val() == "") {

            alert("Please select Company");
            $("#Company").focus();
            return false;
        }


        if ($("#FYear").val() == "") {

            alert("Please select Fin. Year");
            $("#FYear").focus();
            return false;
        }

        if ($("#Branch").val() == "") {

            alert("Please select Branch");
            $("#Branch").focus();
            return false;
        }

        $("#CompanyName").val($("#Company option:selected").text());
        $("#BranchName").val($("#Branch option:selected").text());
        $("#FYearName").val($("#FYear option:selected").text());

        //return false;
    });
</script>
</html>
